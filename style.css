:root {
    --gradient-color: linear-gradient(to right, #495867, #8693ab);
    --primary-color-1: #607d8b;
    --primary-color-2: #37474f;
    --box-shadow-color: #37474f72;

    --main-background: #fbfbfb;
    --user-background: #f5f5f5;
    --load-user-color: white;
    --filters-color: white;


    --font-x-large: 2.3rem;
    --font-big: 1.8rem;
    --font-medium: 1.4rem;
    --font-small: 1.1rem;
    --font-x-small: 0.9rem;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    color: var(--primary-color-1);
    font-size: var(--font-x-small);
    font-family: monospace;
}

html {
    background: var(--gradient-color);
    scroll-behavior: smooth;
}

html.dark-mode {
    --gradient-color: linear-gradient(to right, #495c66, #3d4f5c);
    --primary-color-1: #c5d9e2;
    --primary-color-2: #a3bfcc;

    --main-background: #202020;
    --user-background: #292929;
    --load-user-color: rgb(221, 221, 221);
    --filters-color: black;
}

body {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    margin: 20px;
    position: relative;
}

main {
    background-color: var(--main-background);
    padding: 20px;
    padding-bottom: 200px;
    margin-bottom: 50px;
    width: 80vw;
    display: flex;
    flex-direction: column;
    align-items: center;
    border-radius: 15px;
    gap: 20px;
    max-width: 2000px;
    position: relative;
}

main>header {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 15px;
}

main.inf form,
main.inf .result-sentence {
    display: none;
}

main>header>h1 {
    font-size: var(--font-x-large);
    text-align: center;
}

main>header>h1::after {
    content: '';
    display: block;
    width: 70%;
    height: 3px;
    border-radius: 20px;
    background: var(--gradient-color);
    justify-self: center;
}


main>header>.load-states {
    display: flex;
    justify-content: center;
    gap: 10px;
    border-bottom: 1px solid var(--primary-color-2);
    padding-bottom: 5px;
}


main form {
    display: flex;
    flex-direction: column;
    gap: 15px;
    align-items: center;
    width: 100%;
}

main form #users-amount {
    background-color: var(--main-background);
    padding: 8px 15px;
    width: 120px;
    border-radius: 10px;
    border: none;
    text-align: center;
    box-shadow: 0 0 10px var(--box-shadow-color);
    font-size: var(--font-medium);
    outline: none;
    border: 1px solid rgba(0, 0, 0, 0);
}

main form #users-amount:focus {
    border-color: var(--primary-color-1);
}

main form #load-users {
    font-size: var(--font-medium);
    width: 50%;
    padding: 10px 0;
    border-radius: 20px;
    background: var(--gradient-color);
    border: none;
    color: var(--load-user-color);
    cursor: pointer;
    transition: transform 0.15s;

}

main form #load-users:hover {
    transform: translateY(-4px);
}

main form #load-users:active {
    transform: translateY(0px);
    box-shadow: 0 0 10px var(--box-shadow-color);
}

main form .filters {
    display: flex;
    gap: 10px;
    justify-content: center;
    align-items: center;
}

main form .filters input[type="button"],
main>header>.load-states input {
    background: none;
    color: var(--primary-color-1);
    border: none;
    padding: 3px 7px;
    border-radius: 2px;
    cursor: pointer;
    transition: all 0.15s;
}

main>header>.load-states input {
    padding: 6px 15px;
    border-radius: 10px;
}




main form .filters input[type="button"]:hover,
main form.no-filter input.no-filter,
main form.filter-by-gender input.gender-filter,
main.inf>header input.infinit,
main.man>header input.manualy,
main>header input:hover {
    background-color: var(--primary-color-1);
    color: var(--filters-color);
    transform: translateY(-2px);
}

main form .filters input[type="button"]:hover,
main>header input:hover {
    opacity: 0.7;
}

main form .filters input[type="button"]:active,
main>header input:active {
    opacity: 0.7;
    scale: 1.1;
}

select#genders {
    padding: 3px 10px;
    font-size: var(--font-small);
    outline: none;
    background-color: var(--main-background);
    border: 1px solid var(--primary-color-2);
    display: none;
    width: 30%;
    text-align: center;
    border-radius: 10px;
}

main form.filter-by-gender select#genders {
    display: block;
}


button.download-as-json {

    --size: 50px;
    position: absolute;
    left: 5px;
    top: 20px;
    z-index: 3;
    height: 0;

    background: none;
    border: none;
    cursor: pointer;
    display: flex;
    flex-direction: column;

    &::after {
        content: 'Download';
        display: block;
        visibility: hidden;
        margin-top: 5px;
    }

    &:hover::after {
        visibility: visible;
    }

    & i {
        color: var(--primary-color-2);
        font-size: var(--font-big);
        transition: color 0.1s, scale 0.15s;
    }

    &:hover i {
        color: var(--primary-color-1);
        scale: 1.1;
    }

    &:active i {
        scale: 0.8;
    }
}


.users-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, 450px);
    flex-direction: column;
    justify-content: center;
    gap: 30px;
    width: 100%;
}

.user {
    --image-size: 150px;
    background-color: var(--user-background);
    border-radius: 15px;
    display: flex;
    flex-direction: column;
    align-items: center;
    overflow: hidden;
    transition: box-shadow 0.05s, transform 0.15s;
    /* opacity: 0;
    transform: translateY(-20px);
    animation: fadeInDown 0.4s forwards; */
}

/* 
@keyframes fadeInDown {
    to {
        opacity: 1;
    }
} */

.user:hover {
    box-shadow: 0 0 10px var(--box-shadow-color);
    transform: translateY(-5px);
}

.user .color {
    background: var(--gradient-color);
    height: 130px;
    width: 100%;
}

.user .user-image-container {
    background-color: #fff;
    width: var(--image-size);
    height: var(--image-size);
    overflow: hidden;
    border-radius: 50%;
    border: 1px solid rgb(0, 0, 0, 0.5);
    box-shadow: 0 0 20px var(--box-shadow-color);
    margin-top: calc(var(--image-size)/-2);
}

.user .user-image-container img.user-image {
    width: var(--image-size);
}

.user .user-info {
    padding: 0 20px 20px 20px;
    display: flex;
    flex-direction: column;
    gap: 20px;
    text-align: center;
    width: 100%;
}

.user .user-info span {
    font-size: var(--font-small);
    font-weight: bold;
    color: var(--primary-color-2);
    white-space: nowrap;
    justify-content: center;
    cursor: default;
    display: inline-block;
}

.user .user-info header span {
    width: fit-content;
    align-self: center;
}


/* .user-info span:hover {
    text-decoration: underline;
} */
.user-info span::after {
    content: '';
    height: 2px;
    display: block;
    width: 0%;
    background: none;
    justify-self: center;
    transition: width 0.2s;
}


.user-info span:hover::after {
    width: 100%;
    background: var(--gradient-color);
}

.user-info span.label::after {
    width: 0;
}

.user-info a {
    text-decoration: none;
}

.user-info a span:hover {
    /* text-decoration: underline; */
    cursor: pointer;
}

.user .user-info span.label {
    opacity: 0.6;
}

.user-info header {
    display: flex;
    flex-direction: column;

    & .name {
        color: var(--primary-color-2);
        font-size: var(--font-big);
    }

    & .country {
        opacity: 0.8;
        font-size: var(--font-medium);
    }
}

.user-info .middle-container {
    display: flex;
    justify-content: space-evenly;
    gap: 15px;
}

.user-info .middle-container>div {
    text-align: left;
}


@media (max-width: 650px) {
    main {
        padding-top: 5px;
    }

    .user {
        --image-size: 100px
    }

    .users-container {
        padding: 5px 0px;
    }

    .users-container {
        grid-template-columns: repeat(auto-fit, 70vw);
    }

    :root {
        --font-x-large: 1.8rem;
        --font-big: 1.6rem;
        --font-medium: 1.3rem;
        --font-small: 0.8rem;
        --font-x-small: 0.8rem;
    }
}

.dark-mode-svgs {
    --size: 50px;
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 500;
}

.top {
    width: 50px;
    height: 50px;
    color: var(--primary-color-2);
    background-color: var(--filters-color);
    border-radius: 50%;
    padding: 10px;
    position: fixed;
    right: 15px;
    bottom: 15px;
    transition: scale 0.15s;
    z-index: 50;
}

.top:hover {
    scale: 1.1;
}


.dark-mode-svgs svg {
    width: var(--size);
    height: var(--size);
    cursor: pointer;
    transition: scale 0.15s, background-color 0.15s;
    padding: 10px;
    background-color: rgba(211, 211, 211, 0.884);
    border-radius: 50%;

    &.hidden {
        display: none;
    }

    &:hover {
        scale: 1.1;
        background-color: rgba(199, 199, 199, 0.952);
    }

    &:active {
        scale: 0.8;
    }
}

.moon {
    stroke: none;
    fill: rgb(71, 69, 69);
}

.dark-mode-svgs svg.sun {
    stroke: rgb(240, 240, 40);
    background-color: rgba(0, 0, 0, 0.562);
}

.loading-spinner {
    display: flex;
    align-items: center;
    justify-content: center;
}

.loading-spinner i {
    font-size: 5rem;
}

.loading-spinner.hidden {
    display: none;
}




@media (max-width: 500px) {

    main {
        padding-top: 50px;
    }

    .users-container {
        grid-template-columns: repeat(auto-fit, 1fr);
    }

    .user-info .middle-container {
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 0px;
    }
}

@media (max-width: 350px) {

    main>header>.load-states,
    .filters {
        flex-direction: column;
    }

    main form input#load-users {
        font-size: var(--font-small);
    }
}